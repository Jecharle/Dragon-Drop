.game-window {
	display: flex;
	justify-content: center;
}

.nav-bar {
	display: flex;
	flex-flow: row nowrap;
	justify-content: space-between;
	align-items: center;
	margin: 1px;
}
.nav-bar button {
	display: inline-block;
	color: white;
	background-color: deepskyblue;
	border: none;
	padding: 8px;
	flex: 0 0 25%;
	cursor: pointer;
}
.nav-bar button:hover {
	background-color: skyblue;
}
.nav-bar button:disabled {
	color: lightgray;
	background-color: gray;
	cursor: default;
}
.nav-bar span {
	flex: 0 1 100%;
	font-size: 24px;
}

/*Special thanks to @Jordan on codepen!*/
.isometric .board {
	transform: rotateX(60deg) rotateZ(45deg);
	transform-style: preserve-3d;
}
.isometric .board .piece {
	transform: translateX(50%) rotateZ(-45deg) rotateX(-60deg);
	transform-origin: 50% 100%;
}
.isometric .board .square {
	transform: translateZ(1px);
}
.isometric .board .square::before {
	transform: translateX(-50%) translateZ(-2px) rotateZ(-45deg) rotateX(-60deg);
	transform-origin: 50% 0%;
}
.isometric .board .wall {
	transform: translateZ(45px);
}
/*
TODO: Flatten up the whole square, use bitmaps for the range indicators too?
I'm a bit worried about how mouse detection will work, though, given all the overlapping rectangles
*/

.board {
	display: flex;
	flex-flow: column nowrap;
}
.row {
	flex: 0 0 auto;
	display: flex;
	flex-flow: row nowrap;
}
.square {
	flex: 0 0 auto;
	position: relative;
	box-sizing: border-box;
	width: 90px;
	height: 90px;
	transform-style: preserve-3d;
}
.square::before {
	position: absolute;
	z-index: -1;
	top: 0px;
	left: 0px;
	width: 128px;
	height: 128px;
	content: "";
	background-image: url(../img/testTileset.png);
	background-repeat: no-repeat;
	background-position: 0 0;
}
.square::after {
	position: absolute;
	z-index: 0;
	top: 0px;
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	opacity: 75%;
	content: "";
}
.pit::before {
	background-position-x: -128px;
}
.wall::before {
	background-position-x: -384px;
}

.deploy-range, .move-range, .skill-range {
	cursor: pointer;
}
.deploy-range::after {
	background-color: yellow;
}
.deploy-range:hover::after, .selected.deploy-range::after {
	background-color: lightyellow;
}
.move-range::after {
	background-color: deepskyblue;
}
.move-range:hover::after {
	background-color: skyblue;
}
.move-origin::after {
	border-radius: 50%;
}
.skill-range::after {
	background-color: orange;
}
.skill-aoe::after {
	border: 8px solid yellow;
}
.skill-range-invalid::after {
	background-color: darkgoldenrod;
}

.piece {
	position: relative;
	z-index: 1;
	/*width: 100%;
	height: 100%;*/
	width: 64px;
	height: 64px;
}
.piece::before {
	position: absolute;
	bottom: 0px;
	height: 100%;
	width: 100%;
	content: "";
	box-sizing: border-box;
	border: 1px solid black;
}

.selectable::before {
	cursor: pointer;
}
.selectable:hover::before, .piece.selected::before {
	border: 2px solid deepskyblue;
}

.unselectable::before {
	filter: grayscale(100%);
}

/*TODO: Should I bother keeping these? Large units are major pain to deal with*/
.x2 {
	width: 200%;
	height: 200%;
	top: -50%;
	left: -50%;
}
.x3 {
	width: 300%;
	height: 300%;
	top: -100%;
	left: -100%;
}

.left.unit::before {
	transform:scaleX(-1.0);
}
.unit.selectable::after {
	content: "";
	position: absolute;
	top: -16px;
	left: 21px;
	border-width: 10px;
	border-style: solid;
	border-color: gold transparent transparent transparent;
}
.unit.selectable:hover::after, .skill-range .unit.selectable::after {
	top: -25px;
}

.ball::before {
	/*background-color: darkgreen;*/
	border: hidden;
	background-image: url("../img/testUnit.png");
	background-repeat: no-repeat;
	
	background-position: center;
}
.ball2::before {
	background-color: red;
	border-radius: 50%;
}
.ball3::before {
	background-color: greenyellow;
	border-radius: 50%;
}
.rock::before {
	background-color: purple;
	height: 90%;
	width: 90%;
	margin: 5%;
}

.damaged::before {
	animation: shake 150ms;
}

.skill-list {
	display: flex;
	flex-flow: row wrap;
	justify-content: flex-start;
	margin-top: 1px;
}

.skill {
	width: 64px;
	height: 64px;
	margin-left: 1px;
}

.attack-skill::before {
	background-color: red;
	border-radius: 25%;
}
.heal-skill::before {
	background-color: green;
	border-radius: 25%;
}
.build-skill::before {
	background-color: purple;
	border-radius: 25%;
}
.move-skill::before {
	background-color: cornflowerblue;
	border-radius: 25%;
}

.cooldown-label {
	font-size: 32px;
	font-weight: bold;
	color: white;
	text-align: center;
	position: absolute;
	top: 20%;
	left: 35%;
}

.skill-description {
	visibility: hidden;
	/* Pick better colors? */
	background-color: white;
	border: 1px solid black;
	position: absolute;
	z-index: 3;
	width: max-content;
	height: max-content;
	bottom: 110%;
	border-radius: 4px;
	padding: 5px;
}
.skill-description::after {
	content: "";
	position: absolute;
	top: 100%;
	left: 25px;
	border-width: 5px;
	border-style: solid;
	border-color: black transparent transparent transparent;
}
.skill:hover .skill-description {
	visibility: visible;
}

.lifebar {
	visibility: hidden;
	position: absolute;
	z-index: 2;
	width: 100%;
	height: 8px;
	top: -12px;
	outline: 1px solid black;
	background-color: gray;
}
.inner-lifebar {
	height: 100%;
	background-color: red;
}
.piece:hover .lifebar, .skill-range .lifebar, .skill-aoe .lifebar {
	visibility: visible;
}

.popup-text {
	font-size: 24px;
	font-weight: bold;
	color: white;
	text-shadow: 2px 2px black;
	display: flex;
	justify-content: center;
	align-items: center;
	position: relative;
	z-index: 4;
	animation: rise-up 1s ease-out;
}

.phase-banner {
	font-size: 40px;
	font-weight: bold;
	background-color: white;
	border-top: 1px solid black;
	border-bottom: 1px solid black;
	width: 100%;
	display: flex;
	justify-content: center;
	position: relative;
	bottom: 50%;
	z-index: 5;
	animation: banner-display 800ms ease-out 0s 2 alternate;
}

@keyframes shake {
	from {
		margin-left: 0px;
		margin-right: 0px;
	}
	25% {
		margin-left: -8px;
		margin-right: 8px;
	}
	75% {
		margin-left: 8px;
		margin-right: -8px;
	}
	to {
		margin-left: 0px;
		margin-right: 0px;
	}
}
@keyframes rise-up {
	from {
		top: 0px;
	}
	70% {
		top: -32px;
	}
	to {
		top: -32px;
	}
}
@keyframes banner-display {
	from {
		height: 0px;
		color: transparent;
	}
	40% {
		height: 48px;
		color: transparent;
	}
	80% {
		height: 48px;
		color: black;
	}
	to {
		height: 48px;
		color: black;
	}
}