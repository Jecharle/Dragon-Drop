/*#region game window*/
:root {
	--game-w: 1024px;
	--game-h: 576px;
}

.game-window {
	width: var(--game-w);
	height: var(--game-h);
	overflow: hidden;
	border: 1px solid black; /*TEMP?*/
	position: relative;
}
	.loading.game-window::before {
		content: "Loading...";
		position: absolute;
		z-index: 99;
		right: 8px;
		bottom: 8px;
		color: black;
		font-size: 18px;
		font-weight: bold;
	}

.scene {
	width: 100%;
	height: 100%;
	box-sizing: border-box;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
}
/*#endregion game window*/

/*#region common styles*/
.selectable, .viewable {
	cursor: pointer;
}
.unselectable>.sprite {
	filter: grayscale(100%);
}

.intro {
	animation: fade-out 0.5s reverse backwards;
}
.outro {
	animation: fade-out 0.5s forwards;
}
/*#endregion common styles*/

/*#region battle scene*/
/*#region battle scene UI*/
.nav-button {
	display: inline-block;
	font-size: 18px;
	color: white;
	background-color: deepskyblue;
	border: none;
	padding: 12px;
	width: 15%;
	cursor: pointer;
	position: absolute;
}
	.nav-button:hover {
		background-color: skyblue;
	}
	.nav-button:disabled {
		color: lightgray;
		background-color: gray;
		cursor: default;
	}
	.undo-button {
		top: 12px;
		left: 12%;
	}
	.end-turn-button {
		bottom: 12px;
		right: 12px;
		height: 96px;
		border-radius: 16px;
	}
	.menu-button {
		top: 12px;
		left: 12px;
		width: 10%;
	}
.turn-title {
	font-size: 24px;
	position: absolute;
	top: 32px;
	right: 64px;
}
/*#endregion battle scene UI*/

/*#region skill list*/
.skill-list {
	display: flex;
	flex-flow: row wrap;
	justify-content: flex-start;
	align-items: flex-end;
	position: absolute;
	bottom: 0;
	width: 40%;
}
	/*#region selected unit info*/
	.unit-info {
		position: relative;
		height: var(--face-h);
		width: var(--face-w);
		overflow: visible;
		display: flex;
		justify-content: flex-start;
	}
		.unit-info .face {
			height: var(--face-h);
			width: var(--face-w);
			box-sizing: border-box;
			position: absolute;
			bottom: 0;
			background-repeat: no-repeat;
			background-position: bottom left;
		}
		.unit-info .lifebar {
			visibility: visible;
		}
		.unit-info .name {
			position: absolute;
			z-index: 2;
			height: max-content;
			width: max-content;
			left: 0;
			bottom: 100%;
			font-size: 16px;
			font-weight: bold;
		}
		.unit-info:hover .skill-description {
			display: block;
			bottom: 130%;
		}
	/*#endregion selected unit info*/
/*#endregion skill list*/

/*#region skill piece*/
.skill {
	width: var(--skill-w);
	height: var(--skill-h);
	margin-left: 1px;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
}
	.skill>.sprite {
		width: 100%;
		height: 100%;
		box-sizing: border-box;
		position: absolute;
	}
	.skill-description {
		display: none;
		background-color: white;
		border: 1px solid black;
		position: absolute;
		z-index: 3;
		width: max-content;
		height: max-content;
		left: 0%;
		bottom: 110%;
		border-radius: 4px;
		padding: 5px;
	}
		.skill-description::after {
			content: "";
			position: absolute;
			top: 100%;
			left: 25px;
			border-width: 5px;
			border-style: solid;
			border-color: black transparent transparent transparent;
			pointer-events: none;
		}
	.cooldown-label {
		font-size: 24px;
		font-weight: bold;
		color: white;
		text-align: center;
		position: absolute;
	}
	.quantity-label {
		font-size: 20px;
		font-weight: bold;
		color: white;
		text-align: center;
		position: absolute;
		right: 8px;
		bottom: 6px;
	}

	/*#region skill states*/
	.selectable.skill:hover, .skill.selected {
		bottom: 4px;
	}
	.selectable.skill:hover>.sprite, .skill.selected>.sprite {
		border: 2px solid deepskyblue;
	}
	.skill:hover .skill-description {
		display: block;
	}
	/*#endregion skill states*/

	/*#region skill icons*/
	.attack-skill>.sprite {
		background-color: red;
		border-radius: 25%;
	}
	.heal-skill>.sprite {
		background-color: green;
		border-radius: 25%;
	}
	.build-skill>.sprite {
		background-color: purple;
		border-radius: 25%;
	}
	.move-skill>.sprite {
		background-color: lightskyblue;
		border-radius: 25%;
	}
	.buff-skill>.sprite {
		background-color: yellowgreen;
		border-radius: 25%;
	}
	.debuff-skill>.sprite {
		background-color: magenta;
		border-radius: 25%;
	}
	/*#endregion skill icons*/
/*#endregion skill piece*/

/*#region phase change & end screens*/
.phase-banner {
	font-size: 40px;
	font-weight: bold;
	background-color: white;
	border-top: 1px solid black;
	border-bottom: 1px solid black;
	width: 100%;
	display: flex;
	justify-content: center;
	position: absolute;
	z-index: 5;
	animation: banner-display 600ms linear 2 alternate;
	pointer-events: none;
}
.battle-end {
	font-size: 64px;
	font-weight: bold;
	color: white;
	background-color: #000000cc;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	z-index: 5;
	animation: end-screen 2s linear backwards;
	animation-delay: 0.25s;
}
/*#endregion phase change & end screens*/

/*#region board structure*/
:root {
	--square-size: 128px;

	--square-w: 96px;
	--square-h: 48px;
	--square-total-h: 96px;

	--unit-w: 64px;	
	--unit-h: 64px;

	--face-w: 96px;	
	--face-h: 80px;

	--lifebar-h: 14px;

	--skill-w: 64px;
	--skill-h: 64px;
}
.board {
	display: flex;
	justify-content: center;
	position: absolute;
	top: 24px;
	z-index: 0;
}
	.square {
		display: flex;
		justify-content: center;
		align-items: center;
		position: absolute;
		box-sizing: border-box;
		width: var(--square-w);
		height: var(--square-h);
		pointer-events: none;
	}
	.square::after {
		content: "";
		width: inherit;
		height: inherit;
		position: absolute;
		z-index: 1;
		clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
		pointer-events: auto;
	}
	.square:hover::before {
		background-color: white;
		border: 1px solid black;
		position: absolute;
		z-index: 2;
		width: max-content;
		height: max-content;
		left: 0;
		bottom: 110%;
		border-radius: 4px;
		padding: 5px;
		animation: fade-out 0.1s 0.5s reverse both;
	}

	/*#region terrain types*/
	.square>.sprite {
		position: absolute;
		z-index: -2;
		width: var(--square-w);
		height: var(--square-total-h);
		top: 0;
		
		background-image: url(../img/testTileset.png);
		background-repeat: no-repeat;
		background-position: 0 0;
	}
		.pit>.sprite {
			background-position-y: calc(-1*var(--square-total-h));
		}
		.cover>.sprite {
			background-position-y: calc(-2*var(--square-total-h));
		}
			.cover:hover::before {
				content: "Cover blocks line of sight, but allows movement";
			}
		.wall>.sprite {
			background-position-y: calc(-3*var(--square-total-h));
		}
		.rough>.sprite {
			background-position-y: calc(-4*var(--square-total-h));
		}
			.rough:hover::before {
				content: "Rough terrain costs 2 squares of movement to enter";
			}
	/*#endregion terrain types*/

	/*#region range / area highlighting*/
	.square>.sprite::after {
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		opacity: 65%;
		width: var(--square-w);
		height: var(--square-h);
		background-image: url(../img/tileHighlights.png);
		background-repeat: no-repeat;
		background-position: 0 0;
	}
		.move-range>.sprite::after {
			background-position-y: calc(-1*var(--square-h));
		}
		.skill-range>.sprite::after {
			background-position-y: calc(-2*var(--square-h));
		}
		.deploy-range>.sprite::after {
			background-position-y: calc(-3*var(--square-h));
		}
		.enemy-preview.move-range>.sprite::after {
			background-position-y: calc(-4*var(--square-h));
		}

		.square.selected>.sprite::after {
			background-position-x: calc(-1*var(--square-w));
		}

		.invalid>.sprite::after {
			opacity: 35%;
		}
	/*#endregion range / area highlighting*/

	/*#region move path*/
	.square.move-path>.sprite::before {
		content: "";
		position: absolute;
		z-index: -0.5;
		top: 0;
		left: 0;
		width: var(--square-w);
		height: var(--square-h);
		background-image: url(../img/path.png);
		background-repeat: no-repeat;
	}
		/*#region single direction*/
		.left>.sprite::before {
			background-position: 0 0;
		}
		.up>.sprite::before {
			background-position: 0 calc(-1*var(--square-h));
		}
		.right>.sprite::before {
			background-position: 0 calc(-2*var(--square-h));
		}
		.down>.sprite::before {
			background-position: 0 calc(-3*var(--square-h));
		}
		/*#endregion single direction*/
		/*#region straight*/
		.left.right>.sprite::before {
			background-position: calc(-1*var(--square-w)) 0;
		}
		.up.down>.sprite::before {
			background-position: calc(-1*var(--square-w)) calc(-1*var(--square-h));
		}
		/*#endregion straight*/
		/*#region corners*/
		.left.up>.sprite::before {
			background-position: calc(-2*var(--square-w)) 0;
		}
		.up.right>.sprite::before {
			background-position: calc(-2*var(--square-w)) calc(-1*var(--square-h));
		}
		.right.down>.sprite::before {
			background-position: calc(-2*var(--square-w)) calc(-2*var(--square-h));
		}
		.down.left>.sprite::before {
			background-position: calc(-2*var(--square-w)) calc(-3*var(--square-h));
		}
		/*#endregion corners*/
		/*#region arrows*/
		.left.move-end>.sprite::before {
			background-position: calc(-3*var(--square-w)) 0;
		}
		.up.move-end>.sprite::before {
			background-position: calc(-3*var(--square-w)) calc(-1*var(--square-h));
		}
		.right.move-end>.sprite::before {
			background-position: calc(-3*var(--square-w)) calc(-2*var(--square-h));
		}
		.down.move-end>.sprite::before {
			background-position: calc(-3*var(--square-w)) calc(-3*var(--square-h));
		}
		/*#endregion arrows*/
	/*#endregion move path*/
/*#endregion board structure*/

/*#region unit*/
.unit {
	width: var(--unit-w);
	height: var(--unit-h);
	box-sizing: border-box;
	position: absolute;
	bottom: calc(0px - var(--square-h));
	display: flex;
	justify-content: center;
}
	.unit>.sprite {
		width: var(--unit-w);
		height: var(--unit-h);
		box-sizing: border-box;
		position: absolute;
		z-index: 0;
		bottom: 0;
		background-repeat: no-repeat;
		background-position: 0 0;
		transition: transform 0.2s;
	}
	.unit::after {
		content: "";
		position: absolute;
		z-index: -1;
		bottom: 0;
		width: 100%;
		height: 100%;
		background-repeat: no-repeat;
		background-image: url(../img/shadow.png);
		opacity: 40%;
	}

	/*#region unit details*/
	.lifebar {
		position: absolute;
		z-index: 2;
		height: var(--lifebar-h);
		top: -2px;
		background-image: url(../img/lifebar.png);
		background-position: 0 0;
		background-repeat: repeat-x;
		visibility: hidden;
		pointer-events: none;
	}
		.lifebar>.inner {
			position: absolute;
			z-index: 0;
			left: 0;
			height: var(--lifebar-h);
			background-image: url(../img/lifebar.png);
			background-position: 0 calc(-1*var(--lifebar-h));
			background-repeat: repeat-x;
		}
		.lifebar>.change {
			position: absolute;
			z-index: 1;
			height: var(--lifebar-h);
			background-image: url(../img/lifebar.png);
			background-position: 0 calc(-2*var(--lifebar-h));
			background-repeat: repeat-x;
			visibility: hidden;
		}
		.hp-change .lifebar>.change {
			animation: fade-out 0.8s 0.2s both;
			visibility: visible;
		}
		.unit:hover .lifebar, .hp-change .lifebar, .in-range .lifebar, .in-area .lifebar {
			visibility: visible;
		}
	
	.status-list {
		position: absolute;
		z-index: 2;
		height: 16px;
		width: 100%;
		bottom: 0;
		display: flex;
		justify-content: flex-end;
		flex-wrap: wrap-reverse;
		/*TODO: Some kind of internal marquee or something?*/
		pointer-events: none;
	}
		.status-list>.icon {
			height: 16px;
			width: 16px;
			position: relative;
			display: flex;
			justify-content: center;
			align-items: center;
			background-image: url(../img/statusIcons.png);
			background-position: 0 0;
		}
		.status-list>.icon.double::after {
			content: " ";
			height: 16px;
			width: 16px;
			background-image: inherit;
			background-position: inherit;
			filter: brightness(75%);
			position: absolute;
			top: -4px;
			left: -2px;
			z-index: -1;
		}

		/*#region status icons*/
		.status-list>.power-up {
			background-position: 0 0;
		}
		.status-list>.power-down {
			background-position: 0 -16px;
		}

		.status-list>.defense-up {
			background-position: -16px 0;
		}
		.status-list>.defense-down {
			background-position: -16px -16px;
		}

		.status-list>.speed-up {
			background-position: -32px 0;
		}
		.status-list>.speed-down {
			background-position: -32px -16px;
		}
		
		.status-list>.charge-up {
			background-position: -48px 0;
		}
		.status-list>.charge-down {
			background-position: -48px -16px;
		}

		.status-list>.regenerate {
			background-position: 0 -32px;
		}
		.status-list>.poison {
			background-position: -16px -32px;
		}

		/*TODO: Get icons for these, too*/
		.status-list>.trap {
			background-position: 0 -48px;
		}
		.status-list>.evade {
			background-position: -16px -48px;
		}
		.status-list>.anchor {
			background-position: -32px -48px;
		}
		/*#endregion status icons*/
	/*#endregion unit details*/

	/*#region unit states and motions*/
	.unit.x2 {
		--unit-w: 128px;
		--unit-h: 128px;
	}
	.left.unit>.sprite {
		transform: scaleX(-1);
	}
	.unit.selectable.selected>.sprite, .unit.selectable:hover>.sprite {
		filter: drop-shadow(2px 0 yellow)
		drop-shadow(-2px 0 yellow)
		drop-shadow(0px -2px yellow);
	}
	.moving>.sprite {
		background-position-y: calc(-1*var(--unit-h));
		background-position-x: calc(-2*var(--unit-w));
		animation: sprite-animation 0.3s steps(2) infinite;
	}
	.attack>.sprite {
		background-position-y: calc(-3*var(--unit-h));
	}
	.damaged>.sprite {
		background-position-y: calc(-2*var(--unit-h));
		animation: shake 150ms;
	}
	.spawn>.sprite {
		animation: drop-in 0.2s ease-in;
	}
	.dead>.sprite {
		background-position-y: calc(-2*var(--unit-h));
		animation: darken-and-fade 1s 0.2s both;
	}
		.dead::after {
			animation: darken-and-fade 1s 0.2s both;
		}
	/*#endregion unit states and motions*/

	/*#region unit skins*/
	.melee-unit>.sprite {
		background-image: url("../img/testMeleeUnit.png");
	}
	.melee-unit>.face {
		background-image: url("../img/testMeleeUnitFace.png");
	}

	.support-unit>.sprite {
		background-image: url("../img/testSupportUnit.png");
	}
	.support-unit>.face {
		background-image: url("../img/testSupportUnitFace.png");
	}

	.position-unit>.sprite {
		background-image: url("../img/testPositionUnit.png");
	}
	.position-unit>.face {
		background-image: url("../img/testPositionUnitFace.png");
	}

	.enemy-unit>.sprite {
		background-image: url("../img/testEnemyUnit.png");
	}
	.enemy-unit>.face {
		background-image: url("../img/testEnemyUnitFace.png");
	}

	.rock>.sprite {
		background-image: url("../img/testObject.png");
	}
	/*#endregion unit skins*/
/*#endregion unit*/

/*#region deploy list*/
.deploy-list {
	position: absolute;
	z-index: 0;
	width: calc(var(--unit-w)*3);
	height: calc(var(--unit-h)*2);
	left: 12px;
	bottom: 12px;
	display: flex;
	flex-flow: row wrap;
	justify-content: flex-start;
	background-color: white;
	border: 2px solid black;
	border-radius: 8px;
}
	.deploy-list::before {
		content: "Party";
		position: absolute;
		top: -1.5em;
		left: 0;
		font-weight: bold;
	}
	.deploy-list .unit {
		position: relative;
		bottom: 0;
		margin-top: 2px;
	}

	.deploy-list .capacity-label {
		position: absolute;
		top: -1.5em;
		right: 0;
		font-weight: bold;
	}
/*#endregion deploy list*/
/*#endregion battle scene*/

/* TODO: Section up and organize the map scene styles */
/*#region map scene*/
.scrolling-view {
	position: absolute;
	top: 50%;
	left: 50%;
	/*TEMP below here*/
	box-sizing: border-box;
	border: 1px dotted black;
}

.overworld-map {
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
}

.explore-button {
	bottom: 12px;
	right: 12px;
	height: 96px;
	border-radius: 16px;
	transition: bottom 1s;
}
.map-node-description {
	position: absolute;
	bottom: 12px;
	width: 50%;
	height: 5em;
	background-color: white;
	border: 1px solid black;
	padding: 12px;
	border-radius: 8px;
	transition: bottom 1s;
}
	.hide-description .explore-button, .hide-description .map-node-description {
		bottom: -20%;
	}


.map-node {
	display: flex;
	justify-content: center;
	position: absolute;
	bottom: 0;
	background-color: lightgray;
	width: 64px;
	height: 32px;
	box-sizing: border-box;
	border-radius: 50%;
}
	.map-node.incomplete {
		background-color: salmon;
	}
	.map-node.repeatable {
		background-color: cornflowerblue;
	}
	.selectable.map-node:hover {
		border: 4px solid yellow;
	}
	.map-node.unlock {
		animation: fade-out 0.5s reverse backwards;
	}

.overworld-map .line {
	position: absolute;
	z-index: -1;
	height: 2px;
	transform-origin: left center;
	background-color: black;
	pointer-events: none;
	bottom: 16px;
	left: 0;
}
	.overworld-map .line.unlock {
		animation: draw-line 1s 0.5s backwards;
	}
	/*TODO: Alternate settings if the line comes FROM the new node?*/

.map-piece {
	width: 64px;
	height: 64px;
	box-sizing: border-box;
	position: absolute;
	bottom: 0;
	display: flex;
	justify-content: center;
}
	.map-piece>.sprite {
		width: 64px;
		height: 64px;
		box-sizing: border-box;
		position: absolute;
		z-index: 0;
		bottom: 0;
		background-repeat: no-repeat;
		background-position: 0 0;
		background-image: url(../img/testMeleeUnit.png);
	}
/*#endregion map scene*/

/*#region sprite effects*/
.sprite-effect {
	width: var(--unit-w);
	height: var(--unit-h);
	box-sizing: border-box;
	position: absolute;
	top: -12px;
	display: flex;
	justify-content: center;
}
	.sprite-effect>.sprite {
		width: var(--unit-w);
		height: var(--unit-h);
		box-sizing: border-box;
		position: absolute;
		z-index: 0;
		bottom: 0;
		background-repeat: no-repeat;
	}

	/*#region sprite effect skins*/
	.test-attack-effect>.sprite {
		background-image: url("../img/testAttack.png");
		background-position-x: calc(-6*var(--unit-w));
		animation: sprite-animation 0.2s steps(6) both;
	}
	.test-heal-effect>.sprite {
		background-image: url("../img/testHeal.png");
		background-position-x: calc(-5*var(--unit-w));
		animation: sprite-animation 0.3s steps(5) both;
	}
	.test-shot-effect>.sprite {
		background-image: url("../img/testBullet.png");
		background-position-x: calc(-6*var(--unit-w));
		animation: sprite-animation 0.2s steps(6) 0.2s both;
	}
	.test-arc-effect>.sprite {
		background-image: url("../img/testBullet.png");
		background-position-x: calc(-6*var(--unit-w));
		animation: sprite-animation 0.2s steps(6) 0.4s both;
	}
	/*#endregion sprite effect skins*/
/*#endregion sprite effects*/

/*#region popup text*/
.popup-text {
	font-size: 24px;
	font-weight: bold;
	color: white;
	text-shadow: 2px 2px black;
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	z-index: 4;
	animation: rise-up 1s ease-out;
}
/*#endregion popup text*/

/*#region holding area for keyframes*/
@keyframes sprite-animation {
	from {
		background-position-x: 0;
	}
}
@keyframes shake {
	from {
		margin-left: 0;
		margin-right: 0;
	}
	25% {
		margin-left: -8px;
		margin-right: 8px;
	}
	75% {
		margin-left: 8px;
		margin-right: -8px;
	}
	to {
		margin-left: 0;
		margin-right: 0;
	}
}
@keyframes rise-up {
	from {
		bottom: 95%;
	}
	50% {
		bottom: 120%;
	}
	to {
		bottom: 120%;
	}
}
@keyframes fade-out {
	to {
		opacity: 0%;
	}
}
@keyframes darken-and-fade {
	50% {
		filter: brightness(0%);
	}
	to {
		filter: brightness(0%);
		opacity: 0%;
	}
}
@keyframes drop-in {
	from {
		opacity: 0%;
		bottom: 100%;
	}
}
@keyframes draw-line {
	from {
		width: 0;
	}
}
@keyframes banner-display {
	from {
		height: 0;
		color: transparent;
	}
	50% {
		height: 48px;
		color: transparent;
	}
	75% {
		height: 48px;
		color: black;
	}
	to {
		height: 48px;
		color: black;
	}
}
@keyframes end-screen {
	from {
		color: transparent;
		background-color: transparent;
	}
	50% {
		color: transparent;
		font-size: 10em;
	}
	to {

	}
}
/*#endregion holding area for keyframes*/