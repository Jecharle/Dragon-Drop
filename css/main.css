@font-face {
	font-family: pixelFont;
	src: url(../font/MinimalFont5x7.ttf);
}
:root {
	--game-w: 512px;
	--game-h: 384px;
	font: 16px pixelFont;
}
p {
	margin-block: 0.25em;
}

/*#region common styles*/
.selectable,.viewable {
	cursor: pointer;
}
	.selectable.draggable,.viewable.draggable {
		cursor: all-scroll;
	}
.unselectable>.sprite {
	filter: grayscale(100%);
}

.intro {
	animation: fade-out 0.5s reverse backwards;
}
.outro {
	animation: fade-out 0.5s forwards;
}
/*#endregion common styles*/

/*#region input element styles*/
input {
	font: 16px pixelFont;
	cursor: pointer;
	user-select: none;
}
input:disabled {
	cursor: default;
}

.button {
	display: flex;
	color: black;
	width: max-content;
	height: max-content;
	padding: 2px;
	box-sizing: border-box;
	border: 4px solid transparent;
	border-image-source: url(../img/system/button.png);
	border-image-repeat: repeat;
	border-image-slice: 4 4 fill;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	user-select: none;
}
.button:hover {
	filter: brightness(150%);
}
.button.disabled, .button.disabled:hover {
	cursor: default;
	pointer-events: none;
	filter: brightness(50%);
}

input[type="checkbox"] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	width: 8px;
	height: 8px;
	background-image: url(../img/system/checkbox.png);
	background-repeat: no-repeat;
	background-position: 0 0;
}
input[type="checkbox"]:checked {
	background-position-y: -8px;
}
input[type="checkbox"]:disabled {
	filter: brightness(50%);
}

input[type="range"] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	background-color: transparent;
	background-image: url(../img/system/slider.png);
	height: 8px;
	position: relative;
	margin-bottom: 1em;
}

input[type="range"]::-webkit-slider-thumb {
	-webkit-appearance: none;
	width: 6px;
	height: 8px;
	background-image: url(../img/system/slider.png);
	background-position-y: -8px;
}
input[type="range"]::-moz-range-thumb {
	width: 6px;
	height: 8px;
	background-image: url(../img/system/slider.png);
	background-position-y: -8px;
}
input[type="range"]::-ms-thumb {
	width: 6px;
	height: 8px;
	background-image: url(../img/system/slider.png);
	background-position-y: -8px;
}

/*#endregion input element styles*/

/*#region game window*/
.game-window {
	width: var(--game-w);
	height: var(--game-h);
	overflow: hidden;
	border: 1px solid black; /*TEMP?*/
	position: relative;

	image-rendering: pixelated;
	transform-origin: 0 0;
	transform: scale(2.0);
}
	.loading.game-window::before {
		content: "Loading...";
		position: absolute;
		z-index: 99;
		right: 4px;
		bottom: 4px;
		color: black;
	}

.scene {
	width: 100%;
	height: 100%;
	box-sizing: border-box;
	position: relative;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}
/*#endregion game window*/

/*#region menus*/
.menu {
	width: 100%;
	height: 100%;
	background-color: #000000aa;
	color: white;
	z-index: 9;
	position: absolute;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	pointer-events: auto;
}
.menu-box {
	width: max-content;
	height: max-content;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: flex-start;
}
.menu-row {
	width: max-content;
	height: max-content;
	display: flex;
	justify-content: justify;
	align-items: center;
	padding: 2px;
}
.menu.battle-menu,.menu.map-menu {
	gap: 8px;
}
.menu-row.volume-slider, .menu-row.speed-slider {
	flex-direction: column;
	align-items: flex-start;
}
.menu-row.accept-cancel {
	margin-top: 12px;
	align-self: flex-end;
	gap: 4px;
}
.menu-row.yes-no {
	gap: 16px;
}

.volume-slider input::before {
	content: "0%";
	position: absolute;
	bottom: -1em;
	left: 0;
	color: white;
}
.volume-slider input::after {
	content: "100%";
	position: absolute;
	bottom: -1em;
	right: 0;
	color: white;
}

.speed-slider input::before {
	content: "Slow";
	position: absolute;
	bottom: -1em;
	left: 0;
	color: white;
}
.speed-slider input::after {
	content: "Fast";
	position: absolute;
	bottom: -1em;
	right: 0;
	color: white;
}

.dialog {
	position: absolute;
	top: 20%;
	left: 20%;
	width: 12em;
	height: 4em;
	display: flex;
	align-items: flex-start;
	justify-content: flex-start;
	border: 1px solid black;
	background-color: white;
	color: black;
	padding: 1em;
}
	.done .dialog::after {
		content: 'V';
		position: absolute;
		right: 2px;
		bottom: 0;
	}
.dialog-box .face {
	position: absolute;
	top: 20%;
	right: 80%;
	height: var(--face-h);
	width: var(--face-w);
	box-sizing: border-box;
	background-repeat: no-repeat;
	background-position: bottom left;
}

.dialog-box.right .face {
	left: 80%;
	right: unset;
	transform: scaleX(-1);
}
.dialog-box.right .dialog {
	left: unset;
	right: 20%;
}

/*#endregion menus*/

/*#region battle scene*/
/*#region battle scene UI*/
.nav-button {
	width: 15%;
	position: absolute;
}
	.undo-button {
		bottom: 12px;
		left: 12px;
	}
	.end-turn-button {
		bottom: 2px;
		right: 2px;
		height: 48px;
	}
	.menu-button {
		top: 6px;
		left: 6px;
		width: 10%;
	}
.turn-title {
	font-size: 2rem;
	position: absolute;
	top: 16px;
	right: 32px;
	text-align: center;
}
/*#endregion battle scene UI*/

/*#region lifebar*/
.lifebar {
	position: absolute;
	z-index: 2;
	height: var(--lifebar-h);
	top: 0;
	background-image: url(../img/system/lifebar.png);
	background-position: 0 0;
	background-repeat: repeat-x;
}
	.lifebar>.inner {
		position: absolute;
		z-index: 0;
		height: var(--lifebar-h);
		background-image: inherit;
		background-position: 0 calc(-1*var(--lifebar-h));
		background-repeat: repeat-x;
	}
	.lifebar>.change {
		position: absolute;
		z-index: 1;
		height: var(--lifebar-h);
		background-image: inherit;
		background-position: 0 calc(-2*var(--lifebar-h));
		background-repeat: repeat-x;
		visibility: hidden;
	}
	.hp-change .lifebar>.change {
		animation: fade-out 0.8s 0.2s both;
		visibility: visible;
	}
	.lifebar>.icon {
		left: calc(100% + 1px);
		top: -3px;
	}
/*#endregion lifebar*/

/*#region status list*/
.status-list {
	position: absolute;
	z-index: 2;
	height: calc(var(--icon-h) + 3px);
	width: 100%;
	bottom: 0;
	right: 0;
}
	.status-list .inner {
		position: absolute;
		height: inherit;
		width: max-content;
	}
	.status-list .icon {
		margin: 1px;
		margin-top: 2px;
	}
	.status-list .icon .icon {
		margin: unset;
	}
/*#endregion status list*/

/*#region icons*/
.icon {
	display: inline-block;
	position: relative;
	height: var(--icon-h);
	width: var(--icon-w);
	background-image: url(../img/system/icons.png);
	background-position: 0 0;
}
.icon .icon {
	position: absolute;
	left: 1px;
	top: 1px;
}
.icon .double {
	background: inherit;
	position: absolute;
	left: -1px;
	top: -2px;
	z-index: -1;
	filter: brightness(75%);
}

.number .minus, .number .plus, .number .times {
	height: inherit;
	width: inherit;
	position: relative;
	right: 1px;
	background-image: inherit;
	background-position-y: calc(-1*var(--icon-h));
}
.number .minus {
	background-position-x: 0;
}
.number .plus {
	background-position-x: calc(-1*var(--icon-w));
}
.number .times {
	background-position-x: calc(-2*var(--icon-w));
}
	/*#region state icons*/
	.icon.life {
		background-position-x: 0;
		background-position-y: calc(-2*var(--icon-h));
	}
	.icon.power {
		background-position-x: calc(-1*var(--icon-w));
		background-position-y: calc(-2*var(--icon-h));
	}
	.icon.defense {
		background-position-x: calc(-2*var(--icon-w));
		background-position-y: calc(-2*var(--icon-h));
	}
	.icon.speed {
		background-position-x: calc(-3*var(--icon-w));
		background-position-y: calc(-2*var(--icon-h));
	}

	.icon.range {
		background-position-x: calc(-4*var(--icon-w));
		background-position-y: calc(-2*var(--icon-h));
	}
	.icon.non-los {
		background-position-x: calc(-5*var(--icon-w));
		background-position-y: calc(-2*var(--icon-h));
	}
	.icon.cooldown {
		background-position-x: calc(-6*var(--icon-w));
		background-position-y: calc(-2*var(--icon-h));
	}

	.icon.regenerate {
		background-position-x: 0;
		background-position-y: calc(-3*var(--icon-h));
	}
	.icon.burn {
		background-position-x: calc(-1*var(--icon-w));
		background-position-y: calc(-3*var(--icon-h));
	}

	.icon.evade {
		background-position-x: calc(-2*var(--icon-w));
		background-position-y: calc(-3*var(--icon-h));
	}
	.icon.anchor {
		background-position-x: calc(-3*var(--icon-w));
		background-position-y: calc(-3*var(--icon-h));
	}
	/*#endregion state icons*/

	/*#region modifier icons*/
	.icon.time {
		background-position-x: calc(-3*var(--icon-w));
		background-position-y: calc(-1*var(--icon-h));
	}
	.icon.up {
		background-position-x: calc(-4*var(--icon-w));
		background-position-y: calc(-1*var(--icon-h));
	}
	.icon.down {
		background-position-x: calc(-5*var(--icon-w));
		background-position-y: calc(-1*var(--icon-h));
	}
	/*#endregion modifier icons*/
/*#endregion icons*/

/*#region skill list*/
.skill-list {
	display: flex;
	flex-flow: row wrap;
	justify-content: flex-start;
	align-items: flex-end;
	position: absolute;
	bottom: 0;
	width: max-content;
	padding-left: 2px;
}
	.skill-list.ally {
		background: linear-gradient(transparent, skyblue);
	}
	.skill-list.enemy {
		background: linear-gradient(transparent, red);
	}

	/*#region selected unit info*/
	.unit-info {
		position: relative;
		height: var(--face-h);
		width: var(--face-w);
		display: flex;
		justify-content: flex-start;
	}
		.unit-info .face {
			height: var(--face-h);
			width: var(--face-w);
			box-sizing: border-box;
			position: absolute;
			bottom: 0;
			background-repeat: no-repeat;
			background-position: bottom left;
		}
		.unit-info .name {
			position: absolute;
			z-index: 2;
			height: max-content;
			width: max-content;
			left: 0;
			bottom: 100%;
		}
		.unit-info:hover .skill-description {
			display: block;
			bottom: 130%;
		}
		.unit-info .status-list .inner {
			right: 0;
		}
	/*#endregion selected unit info*/
/*#endregion skill list*/

/*#region skill card*/
.skill {
	width: var(--skill-w);
	height: var(--skill-h);
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
}
	.skill>.sprite {
		width: 100%;
		height: 100%;
		position: absolute;
		background-image: url(../img/skills/skillcards.png);
		pointer-events: none;
	}
	.skill-description {
		display: none;
		background-color: white;
		border: 1px solid black;
		position: absolute;
		z-index: 3;
		width: max-content;
		height: max-content;
		left: 0%;
		bottom: 110%;
		border-radius: 2px;
		padding: 3px;
	}
	.cooldown-label {
		color: white;
		text-align: center;
		position: absolute;
		pointer-events: none;
	}
	.quantity-label {
		color: white;
		text-align: center;
		position: absolute;
		right: 4px;
		bottom: 1px;
		pointer-events: none;
	}

	/*#region skill states*/
	.skill.selectable:hover, .skill.selected {
		bottom: 2px;
	}
	.skill.selectable:hover>.sprite, .skill.selected>.sprite {
		filter: drop-shadow(1px 0 yellow)
		drop-shadow(-1px 0 yellow)
		drop-shadow(0 1px yellow)
		drop-shadow(0px -1px yellow);
	}
	.skill:not(.dragging):hover .skill-description {
		display: block;
	}
	/*#endregion skill states*/

	/*#region skill icons*/
	.attack-skill .sprite {
		background-position: 0 0;
	}
	.heal-skill .sprite {
		background-position: 0 calc(-3*var(--skill-h));
	}
	.defense-skill .sprite {
		background-position: 0 calc(-2*var(--skill-h));
	}
	.move-skill .sprite {
		background-position: 0 calc(-4*var(--skill-h));
	}
	.buff-skill .sprite {
		background-position: 0 calc(-1*var(--skill-h));
	}
	.debuff-skill .sprite {
		background-position: 0 calc(-6*var(--skill-h));
	}
	.build-skill .sprite {
		background-position: 0 calc(-5*var(--skill-h));
	}
	/*#endregion skill icons*/
/*#endregion skill card*/

/*#region phase change & end screens*/
.skill-banner {
	color: white;
	background-color: #000000cc;
	width: 300%;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
	position: absolute;
	bottom: 150%;
	z-index: 5;
	animation: banner-display 0.5s linear 2 alternate;
	pointer-events: none;
}
.phase-banner {
	font: 2rem;
	background-color: white;
	border-top: 1px solid black;
	border-bottom: 1px solid black;
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
	position: absolute;
	z-index: 5;
	animation: banner-display 0.7s linear 2 alternate;
	pointer-events: none;
}
.battle-end {
	color: white;
	background-color: #000000cc;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	z-index: 5;
	animation: end-screen 2s linear backwards;
	animation-delay: 0.25s;
}
.battle-end strong {
	font-size: 4em;
}
/*#endregion phase change & end screens*/

/*#region board structure*/
:root {
	--square-size: 64px;

	--square-w: 48px;
	--square-h: 24px;
	--square-total-h: 48px;

	--unit-w: 32px;	
	--unit-h: 32px;

	--face-w: 48px;	
	--face-h: 40px;

	--lifebar-h: 7px;

	--icon-h: 8px;
	--icon-w: 8px;

	--skill-w: 32px;
	--skill-h: 32px;
}
.board {
	display: flex;
	justify-content: center;
	position: absolute;
	z-index: 0;
	transform-style: preserve-3d;
}
	.square {
		display: flex;
		justify-content: center;
		align-items: center;
		position: absolute;
		box-sizing: border-box;
		width: var(--square-w);
		height: var(--square-h);
		pointer-events: none;
		transform-style: preserve-3d;
	}
		.square::after {
			content: "";
			width: inherit;
			height: inherit;
			position: absolute;
			clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
			pointer-events: auto;
		}
		.selectable.square::after {
			transform: translateZ(99px);
		}
		.square:hover::before {
			background-color: white;
			border: 1px solid black;
			position: absolute;
			transform: translateZ(98px);
			width: max-content;
			height: max-content;
			left: 0;
			bottom: 110%;
			border-radius: 2px;
			padding: 1px;
			animation: fade-out 0.1s 0.5s reverse both;
		}

	/*#region terrain types*/
	.square>.sprite {
		position: absolute;
		top: 0;
		z-index: -2;
		width: var(--square-w);
		border: var(--square-h) solid transparent;
		border-bottom: calc(var(--square-h) / 2) solid transparent;
		box-sizing: border-box;
		border-image: 50% 50% 25% repeat;
	}
		.tile-cube>.sprite {
			border-image-source: url(../img/tilesets/testTile.png);
		}
		.tile-pit>.sprite {
			border-image-source: url(../img/tilesets/testPit.png);
		}
		.tile-grass>.sprite {
			border-image-source: url(../img/tilesets/testGrass.png);
		}
			.tile-grass:hover::before {
				content: "Cover";
			}
		.tile-water>.sprite {
			border-image-source: url(../img/tilesets/testWater.gif);
		}
			.tile-water:hover::before {
				content: "Rough terrain";
			}
	/*#endregion terrain types*/

	/*#region tile decorations*/	
	.square>.deco-sprite {
		position: absolute;
		z-index: 1;
		bottom: calc(100% - var(--square-h));
		width: var(--square-w);
		background-repeat: no-repeat;
		background-position: 0 0;
		transform: translateZ(13px);
	}
		.deco-pillar>.deco-sprite {
			background-image: url(../img/tilesets/testPillar.png);
			height: 60px;
		}
		.deco-grass>.deco-sprite {
			background-image: url(../img/tilesets/testGrassDeco.png);
			height: 36px;
		}
	/*#endregion tile decorations*/

	/*#region range / area highlighting*/
	.square>.highlight-sprite {
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		opacity: 65%;
		width: var(--square-w);
		height: var(--square-h);
		background-image: url(../img/system/tileHighlights.png);
		background-repeat: no-repeat;
		background-position: 0 0;
	}
		.move-range>.highlight-sprite {
			background-position-y: calc(-1*var(--square-h));
		}
		.skill-range>.highlight-sprite {
			background-position-y: calc(-2*var(--square-h));
		}
		.deploy-range>.highlight-sprite {
			background-position-y: calc(-3*var(--square-h));
		}
		.enemy-preview.move-range>.highlight-sprite {
			background-position-y: calc(-4*var(--square-h));
		}

		.square.selected>.highlight-sprite {
			background-position-x: calc(-1*var(--square-w));
		}

		.invalid>.highlight-sprite {
			opacity: 35%;
		}
	/*#endregion range / area highlighting*/

	/*#region move path*/
	.square.move-path>.path-sprite {
		position: absolute;
		z-index: -0.5;
		top: 0;
		left: 0;
		width: var(--square-w);
		height: var(--square-total-h);
		background-image: url(../img/system/path.png);
		background-repeat: no-repeat;
	}
		/*#region single direction*/
		.left>.path-sprite {
			background-position: 0 0;
		}
		.up>.path-sprite {
			background-position: 0 calc(-1*var(--square-total-h));
		}
		.right>.path-sprite {
			background-position: 0 calc(-2*var(--square-total-h));
		}
		.down>.path-sprite {
			background-position: 0 calc(-3*var(--square-total-h));
		}
		/*#endregion single direction*/
		/*#region straight*/
		.left.right>.path-sprite {
			background-position: calc(-1*var(--square-w)) 0;
		}
		.up.down>.path-sprite {
			background-position: calc(-1*var(--square-w)) calc(-1*var(--square-total-h));
		}
		/*#endregion straight*/
		/*#region corners*/
		.left.up>.path-sprite {
			background-position: calc(-2*var(--square-w)) 0;
		}
		.up.right>.path-sprite {
			background-position: calc(-2*var(--square-w)) calc(-1*var(--square-total-h));
		}
		.right.down>.path-sprite {
			background-position: calc(-2*var(--square-w)) calc(-2*var(--square-total-h));
		}
		.down.left>.path-sprite {
			background-position: calc(-2*var(--square-w)) calc(-3*var(--square-total-h));
		}
		/*#endregion corners*/
		/*#region arrows*/
		.left.move-end>.path-sprite {
			background-position: calc(-3*var(--square-w)) 0;
		}
		.up.move-end>.path-sprite {
			background-position: calc(-3*var(--square-w)) calc(-1*var(--square-total-h));
		}
		.right.move-end>.path-sprite {
			background-position: calc(-3*var(--square-w)) calc(-2*var(--square-total-h));
		}
		.down.move-end>.path-sprite {
			background-position: calc(-3*var(--square-w)) calc(-3*var(--square-total-h));
		}
		/*#endregion arrows*/
	/*#endregion move path*/
/*#endregion board structure*/

/*#region unit*/
.unit {
	width: var(--unit-w);
	height: var(--unit-h);
	box-sizing: border-box;
	position: absolute;
	bottom: calc(0px - var(--square-h));
	display: flex;
	justify-content: center;
	transform-style: preserve-3d;
	--x-scale: 1;
	--y-frame: 0;
	--motion-index: 0;
	--motion-frames: 0;
}
	.unit>.sprite {
		width: var(--unit-w);
		height: var(--unit-h);
		position: absolute;
		z-index: 0;
		bottom: 0;
		transform: scaleX(var(--x-scale));
		background-repeat: no-repeat;
		background-position-x: calc(-1 * var(--unit-w) * var(--motion-frames));
		background-position-y: calc(var(--unit-h) * (var(--y-frame) - 2*var(--motion-index)));
		animation-name: sprite-animation;
		animation-timing-function: steps(var(--motion-frames));
		animation-fill-mode: both;
		pointer-events: none;
	}
	.unit>.shadow {
		position: absolute;
		z-index: -1;
		bottom: 0;
		width: 100%;
		height: 100%;
		background-repeat: no-repeat;
		background-image: url(../img/system/shadow.png);
		transform: scaleX(var(--x-scale));
		opacity: 40%;
		pointer-events: none;
	}
	.unit>.sprite.ghost {
		transform: scaleX(var(--x-scale)) translateZ(99px);
		opacity: 35%;
		visibility: hidden;
	}
		.unit:hover>.sprite.ghost, .unit.selected>.sprite.ghost {
			visibility: visible;
		}
	.unit.in-range, .unit.in-area{
		pointer-events: none;
	}
	.unit.selectable.selected>.sprite, .unit.selectable:hover>.sprite {
		filter: drop-shadow(1px 0 yellow)
		drop-shadow(-1px 0 yellow)
		drop-shadow(0px 1px yellow)
		drop-shadow(0px -1px yellow);
	}
	.unit.enemy.selected>.sprite, .unit.enemy:hover>.sprite {
		filter: drop-shadow(1px 0 red)
		drop-shadow(-1px 0 red)
		drop-shadow(0px 1px red)
		drop-shadow(0px -1px red);
	}

	/*#region unit status*/
	.unit.ally::before {
		content: "";
		visibility: hidden;
		width: 11px;
		height: 11px;
		position: absolute;
		top: -2px;
		background-image: url("../img/system/action.png");
		background-position: 0 -11px;
		background-repeat: no-repeat;
		pointer-events: none;
		transform: translateZ(99px);
	}
	.unit.ally.selectable::before {
		visibility: visible;
		/* Make it blink? */
	}
	.unit.ally.selectable.draggable::before {
		background-position-y: 0;
	}
	.unit.ally.unselectable::before {
		visibility: visible;
		background-position-y: -22px;
	}
	/* TODO: Add an enemy indicator too...? */
	.unit:hover::before, .hp-change.unit::before, .in-range.unit::before, .in-area.unit::before {
		top: -9px;
	}
	/* TODO: Don't show this or the facing arrow in the deploy dock */

	.unit .lifebar {
		visibility: hidden;
		pointer-events: none;
		transform: translateZ(99px);
	}
	.unit:hover .lifebar, .hp-change .lifebar, .in-range .lifebar, .in-area .lifebar {
		visibility: visible;
	}

	.unit .facing-arrow {
		visibility: hidden;
		pointer-events: none;
		position: absolute;
		bottom: 0;
		width: var(--square-w);
		height: var(--square-h);
		background-repeat: no-repeat;
		background-image: url(../img/system/directions.png);
		background-position-x: 0;
		background-position-y: calc(var(--y-frame)*var(--square-h));
		transform: scaleX(var(--x-scale)) translateZ(99px);
	}
	.unit:hover .facing-arrow, .in-range .facing-arrow, .in-area .facing-arrow {
		visibility: visible;
	}
	.enemy .facing-arrow {
		background-position-x: calc(-1 * var(--square-w));
	}

	.unit .status-list {
		width: calc(var(--icon-w) + 2px);
		pointer-events: none;
		overflow: hidden;
		transform: translateZ(99px);
	}
		.unit .status-list .inner {
			animation-name: marquee;
			animation-iteration-count: infinite;
		}
		@keyframes marquee {
			from {
				transform: translateX(0);
			}
			to {
				transform: translateX(-100%);
			}
		}
	/*#endregion unit status*/

	/*#region unit states and motions*/
	.unit.x2 {
		--unit-w: 64px;
		--unit-h: 64px;
	}

	.moving>.sprite {
		--motion-index: 1;
		--motion-frames: 2;
		animation-duration: 0.3s;
		animation-iteration-count: infinite;
	}
	.attack>.sprite {
		--motion-index: 3;
	}
	.damaged>.sprite {
		--motion-index: 2;
		animation: shake 0.15s;
	}
		.damaged>.shadow {
			animation: shake 0.15s;
		}
		.critical.damaged>.sprite, .critical.damaged>.shadow {
			animation-iteration-count: 2;
		}
	.evade>.sprite {
		animation: duck 0.15s 2 alternate;
	}
		.evade>.shadow {
			animation: duck 0.15s 2 alternate;
		}
	.spawn>.sprite {
		animation: drop-in 0.2s ease-in;
	}
	.dead>.sprite {
		--motion-index: 2;
		animation: darken-and-fade 1s 0.2s both;
	}
	/*#endregion unit states and motions*/

	/*#region unit skins*/
	.melee-unit .sprite {
		background-image: url("../img/sprites/testMeleeUnit.png");
	}
	.melee-unit .face {
		background-image: url("../img/faces/testMeleeUnit.png");
	}

	.support-unit .sprite {
		background-image: url("../img/sprites/testSupportUnit.png");
	}
	.support-unit .face {
		background-image: url("../img/faces/testSupportUnit.png");
	}

	.position-unit .sprite {
		background-image: url("../img/sprites/testPositionUnit.png");
	}
	.position-unit .face {
		background-image: url("../img/faces/testPositionUnit.png");
	}

	.status-unit .sprite {
		background-image: url("../img/sprites/testStatusUnit.png");
	}
	.status-unit .face {
		background-image: url("../img/faces/testStatusUnit.png");
	}

	.enemy-unit .sprite {
		background-image: url("../img/sprites/testEnemyUnit.png");
	}
	.enemy-unit .face {
		background-image: url("../img/faces/testEnemyUnit.png");
	}

	.enemy-support-unit>.sprite {
		background-image: url("../img/sprites/testEnemySupportUnit.png");
	}
	.enemy-support-unit>.face {
		background-image: url("../img/faces/testEnemySupportUnit.png");
	}

	.rock>.sprite {
		background-image: url("../img/sprites/testObject.png");
		background-repeat: repeat-y;
	}
	/*#endregion unit skins*/
/*#endregion unit*/

/*#region deploy list*/
.deploy-list {
	position: absolute;
	z-index: 0;
	width: calc(var(--unit-w)*2);
	height: calc(var(--unit-h)*5);
	left: 2px;
	bottom: 2px;
	display: flex;
	flex-flow: column wrap;
	justify-content: flex-start;
	background-color: white;
	border: 1px solid black;
	border-radius: 4px;
}
	.deploy-list .lifebar {
		visibility: visible;
		top: unset;
		bottom: var(--lifebar-h);
		left: var(--unit-w);
	}
	.deploy-list .unit {
		position: relative;
		bottom: 0;
		margin-top: 1px;
	}
	.deploy-list .capacity-label {
		position: absolute;
		top: 1px;
		right: 2px;
	}
/*#endregion deploy list*/
/*#endregion battle scene*/

/* TODO: Section up and organize the map scene styles */
/*#region map scene*/
.scrolling-view {
	position: absolute;
	top: 50%;
	left: 50%;
}

.overworld-map {
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
}

.map-node-description {
	position: absolute;
	bottom: 6px;
	width: 50%;
	height: 5em;
	background-color: white;
	border: 1px solid black;
	padding: 6px;
	border-radius: 4px;
	transition: bottom 1s;
}
	.hide-description .map-node-description {
		bottom: calc(-5em - 16px);
	}

.map-node {
	display: flex;
	justify-content: center;
	position: absolute;
	bottom: 0;
	background-color: silver;
	width: 32px;
	height: 16px;
	box-sizing: border-box;
	border-radius: 50%;
}
	.map-node.incomplete {
		background-color: salmon;
	}
	.map-node.repeatable {
		background-color: cornflowerblue;
	}
	.path.map-node {
		border: 1px solid goldenrod;
	}
	.selected.map-node {
		border: 2px solid yellow;
	}
	.map-node.unlock {
		animation: fade-out 0.5s reverse backwards;
	}

.overworld-map .line {
	position: absolute;
	z-index: -1;
	height: 0;
	transform-origin: left center;
	border-top: 1px dashed silver;
	transition: border-color 0.5s;
	pointer-events: none;
	bottom: 8px;
	left: 0;
}
	.overworld-map .line.selectable {
		border-color: black;
	}
	.overworld-map .line.path {
		border-color: goldenrod;
	}
	.overworld-map .line.unlock {
		animation: draw-line 1s 0.5s backwards;
	}
	.overworld-map .line.unlock.out {
		animation: draw-line 1s 1.5s backwards;
	}

.map-piece {
	width: 32px;
	height: 32px;
	box-sizing: border-box;
	position: absolute;
	bottom: 0;
	display: flex;
	justify-content: center;
	pointer-events: none;
}
	.map-piece>.sprite {
		width: 32px;
		height: 32px;
		box-sizing: border-box;
		position: absolute;
		z-index: 0;
		bottom: 0;
		background-repeat: no-repeat;
		background-position: 0 0;
		background-image: url(../img/sprites/testMeleeUnit.png);
	}
/*#endregion map scene*/

/*#region sprite effects*/
.sprite-effect {
	width: var(--unit-w);
	height: var(--unit-h);
	box-sizing: border-box;
	position: absolute;
	bottom: calc(0px - var(--square-h));
	display: flex;
	justify-content: center;
	pointer-events: none;
	--x-scale: 1;
	--y-frame: 0;
	--motion-index: 0;
	--motion-frames: 0;
}
	.sprite-effect>.sprite {
		width: var(--unit-w);
		height: var(--unit-h);
		box-sizing: border-box;
		position: absolute;
		z-index: 0;
		bottom: 0;
		transform: scaleX(var(--x-scale));
		background-repeat: repeat-y;
		background-position-x: calc(-1 * var(--unit-w) * var(--motion-frames));
		background-position-y: calc(var(--unit-h) * (var(--y-frame) - 2*var(--motion-index)));
		animation-name: sprite-animation;
		animation-timing-function: steps(var(--motion-frames));
		animation-fill-mode: both;
	}

	/*#region sprite effect skins*/
	.burn-effect>.sprite {
		background-image: url("../img/vfx/burn.png");
		--motion-frames: 5;
		animation-duration: 0.5s;
	}
	.heal-effect>.sprite {
		background-image: url("../img/vfx/heal.png");
		--motion-frames: 5;
		animation-duration: 0.5s;
	}

	.test-attack-effect>.sprite {
		background-image: url("../img/vfx/testAttack.png");
		--motion-frames: 6;
		animation-duration: 0.3s;
	}
	.test-shot-effect>.sprite {
		background-image: url("../img/vfx/testBullet.png");
		--motion-frames: 6;
		animation-duration: 0.2s;
		animation-delay: 0.2s;
	}
	.test-arc-effect>.sprite {
		background-image: url("../img/vfx/testBullet.png");
		--motion-frames: 6;
		animation-duration: 0.2s;
		animation-delay: 0.4s;
	}
	.test-buff-effect>.sprite {
		background-image: url("../img/vfx/testBuff.png");
		--motion-frames: 6;
		animation-duration: 0.4s;
	}
	/*#endregion sprite effect skins*/
/*#endregion sprite effects*/

/*#region popup text*/
.popup-text {
	color: white;
	text-shadow: 1px 1px black;
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	animation: rise-up 1s ease-out;
	transform: translateZ(99px);
	user-select: none;
}
	.popup-text.blocked {
		color: silver;
	}
	.popup-text.heal {
		color: greenyellow;
	}
	.popup-text.critical {
		animation: rise-up 1s ease-out, critical-flash 0.15s steps(2) infinite alternate;
	}
/*#endregion popup text*/

/*#region holding area for keyframes*/
@keyframes sprite-animation {
	from {
		background-position-x: 0;
	}
}
@keyframes shake {
	from {
		margin-left: 0;
		margin-right: 0;
	}
	25% {
		margin-left: -8px;
		margin-right: 4px;
	}
	75% {
		margin-left: 4px;
		margin-right: -8px;
	}
	to {
		margin-left: 0;
		margin-right: 0;
	}
}
@keyframes duck {
	from {
		margin-top: 0;
		margin-bottom: 0;
	}
	to {
		margin-top: 8px;
		margin-bottom: -16px;
	}
}
@keyframes rise-up {
	from {
		bottom: 100%;
	}
	50% {
		bottom: 120%;
	}
	to {
		bottom: 120%;
	}
}
@keyframes critical-flash {
	from {
		
	}
	to {
		color: red;
	}
}
@keyframes fade-out {
	to {
		opacity: 0%;
	}
}
@keyframes darken-and-fade {
	50% {
		filter: brightness(0%);
	}
	to {
		filter: brightness(0%);
		opacity: 0%;
	}
}
@keyframes drop-in {
	from {
		opacity: 0%;
		bottom: 100%;
	}
}
@keyframes draw-line {
	from {
		width: 0;
	}
}
@keyframes banner-display {
	from {
		height: 0;
	}
	50% {
		height: 1.5em;
	}
	to {
		height: 1.5em;
	}
}
@keyframes end-screen {
	from {
		color: transparent;
		background-color: transparent;
	}
	50% {
		color: transparent;
		font-size: 15rem;
	}
	to {

	}
}
/*#endregion holding area for keyframes*/